{
  "General": {
    "Symbol": "ETH",
    "Name": "Ethereum",
    "Description": "<p>Ethereum – это децентрализованная платформа, на которой работают интеллектуальные контракты: приложения, которые работают точно так же, как запрограммировано без какой-либо возможности простоев, цензуры, мошенничества или вмешательства третьих сторон. В протоколе Ethereum и блочной цепи есть цена за каждую операцию. Общая идея заключается в том, чтобы сеть передавала или выполняла вещи, вы должны потреблять или сжигать газ (Эфир). Криптовалюта называется Ether (Эфир) и используется для оплаты времени вычислений и для транзакционных сборов.</p><p>Ethereum – это то, как вы привыкли использовать Интернет (хостинг/сервер/домен) – до тех пор, пока у вас будет достаточно средств для оплаты вашего кода, он будет работать в сети, и ваши контакты всегда будут работать.</p><p>В августе 2014 года он был снят поклонниками по всему миру. Он разработан и поддерживается ETHDEV с помощью вкладов великих умов по всему миру.</p><p>В настоящее время Ethereum находится на стадии «Homestead», и все его сопутствующее программное обеспечение по-прежнему считается «Beta» до выхода следующего этапа – «Metropolis».</p>",
    "Features": "<p>Ethereum - это платформа, которая позволяет людям легко создавать децентрализованные приложения с использованием технологии blockchain. Децентрализованное приложение – это приложение, которое служит определенной цели для своих пользователей, но имеет важное свойство, которое само приложение не зависит от какой-либо конкретной существующей стороны. Это инструмент для людей и организаций с двухсторонней связью, которые не могут или не хотят использовать в качестве интерфейса для продажи или предоставления услуг посредников.</p><p>Контракты, используемые в Ethereum обычно выполняют четыре цели:</p><ul><li>Поддерживают хранилище данных, представляя то, что полезно для других контрактов или для внешнего мира; Одним из примеров этого является контракт, который имитирует валюту, а другой - контракт, который регистрирует членство в определенной организации.</li><li>Служат своего родом внешней учетной записью с более сложной политикой доступа; Это новит название «транспортного контракта» и обычно включает в себя просто пересылку входящих сообщений в какой-либо желаемый пункт назначения только в случае выполнения определенных условий; Например, у вас может быть контракт на пересылку, ожидающий до тех пор, пока два из указанных трех закрытых ключей не подтвердят конкретное сообщение перед повторной отправкой (т.е. Multisig). Более сложные контракты пересылки имеют разные условия, основанные на характере отправленного сообщения; Простейшим вариантом использования этой функции является лимит снятия, который можно переопределить с помощью более сложной процедуры доступа.</li><li>Управляют текущим контрактом или отношениями между несколькими пользователями. Примерами этого могут служить финансовый контракт, условное депонирование с определенным набором посредников или какое-то страхование. Можно также создать открытый контракт, чтобы одна сторона оставалась открытой для участия любой другой стороны в любое время; Одним из примеров этого является контракт, который автоматически выплачивает награду тому, кто подает действительное решение какой-либо математической проблемы, или доказывает, что он предоставляет некоторый вычислительный ресурс.</li><li>Предоставлять функции другим контрактам; По существу, выступающей в качестве библиотеки программного обеспечения.</li></ul><p>Контракты взаимодействуют друг с другом посредством действий, который поочередно называют «вызовом» или «отправкой сообщений». «Сообщение» – это объект, содержащий некоторое количество эфира (особая внутренняя валюта, используемая в Ethereum с основной целью оплаты транзакционных сборов), байтовый массив данных любого размера, адреса отправителя и получателя. Когда контракт получает сообщение, у него есть возможность вернуть некоторые данные, которые исходный отправитель сообщения может немедленно использовать. Таким образом, отправка сообщения в точности соответствует вызову функции.</p>",
    "Technology": "<p><strong>Архитектура</strong>: архитектура нижнего уровня Ethereum должна быть как можно более простой, а интерфейсы к Ethereum (включая языки программирования высокого уровня для разработчиков и пользовательский интерфейс для пользователей) должны быть максимально понятны. В тех случаях, когда сложность неизбежна, ее следует вводить в «средние уровни» протокола, которые не являются частью основного консенсуса, но также не видны конечным пользователям - компиляторы на языке высокого уровня, сценарии сериализации аргументов и десериализации, хранение модели структуры данных, интерфейс хранилища leveldb и проводной протокол и т. д. Однако это предпочтение не является абсолютным.</p><p><strong>Свобода</strong>: пользователи не должны ограничиваться тем, для чего они используют протокол Ethereum, и мы не должны пытаться преимущественное одобрение или недобросовестность определенных видов контрактов или транзакций Ethereum, основанных на характере их целей. Это похоже на руководящий принцип концепции «нейтрального нейтралитета». Одним из примеров этого принципа, которым не следует следовать, является ситуация в протоколе транзакций Bitcoin, где использование блокировки для целей «без метки» (например, хранение данных, мета-протоколы) не рекомендуется, а в некоторых случаях явное квази- (например, ограничение OP_RETURN до 40 байт), чтобы попытаться атаковать приложения, используя блок-цепочку «неавторизованными» способами. В Ethereum мы вместо этого решительно поддерживаем подход к установлению транзакционных сборов таким образом, чтобы они были примерно совместимы с стимулами, так что пользователи, которые используют блок-цепочку в раздувом, способствуют усвоению стоимости своей деятельности (например, налогообложение Пигова).</p><p><strong>Обобщение:</strong> протокольные функции и коды операций в Ethereum должны включать в себя максимально низкоуровневые концепции, чтобы их можно объединить произвольными способами, включая способы, которые могут показаться не полезными сегодня, но которые могут стать полезными позже, и поэтому пучок концепций низкого уровня может быть сделав более эффективным, исключив некоторые из его функциональных возможностей, когда это не является необходимым. Примером этого принципа является наш выбор кода операции LOG в качестве способа подачи информации (особенно светлый клиент) dapps, в отличие от простого регистрации всех транзакций и сообщений, как было предложено ранее ранее - концепции «сообщения», «на самом деле является агломерацией нескольких понятий, включая« вызов функции »и« событие, интересное внешним наблюдателям », и стоит отделить два.</p><p><strong>Отсутствие функций</strong>: как следствие обобщения, команда разработчиков часто отказывается строить даже очень распространенные случаи использования на высоком уровне в качестве неотъемлемых частей протокола, понимая, что если люди действительно хотят это сделать, они всегда могут создавать субпротокол (например, поддерживаемая с помощью эфира субвалюта, биткойн / литкойн / dogecoin sidechain и т. д.) внутри контракта. Примером этого является отсутствие в Ethereum функции «блокировки времени», подобной биткойну, поскольку такую функцию можно моделировать с помощью протокола, в котором пользователи отправляют «подписанные пакеты данных», и эти пакеты данных могут быть отправлены в специализированный контракт, который обрабатывает их и выполняет некоторую соответствующую функцию, если пакет данных находится в определенном смысле контракта.</p><p><strong>Non-risk-aversion</strong>: Команда разработчиков работает с более высокой степенью риска, если изменение с повышением риска дает очень существенные преимущества (например, обобщенные переходы состояний, 50-кратное ускорение блоков, эффективность консенсуса и т.д.).</p>",
    "TotalCoinSupply": "0",
    "Algorithm": "Ethash",
    "ProofType": "PoW",
    "BlockReward": 3,
    "Explorer": null,
    "StartDate": "30/07/2015",
    "TotalCoinsMined": 98403637.8115,
    "Twitter": "@ethereum",
    "Telegram": null,
    "Youtube": null,
    "Video": null,
    "BlockchainInfo": null,
    "Facebook": null,
    "Slack": null,
    "Website": "https://www.ethereum.org/",
    "GitHub": null,
    "OnMarkets": [
      "TuxExchange",
      "Exmo",
      "BitBay",
      "WavesDEX",
      "Gateio",
      "Quoine",
      "Gatecoin",
      "Remitano",
      "Kucoin",
      "HitBTC",
      "EthexIndia",
      "Coinone",
      "EXX",
      "Cryptsy",
      "Bitstamp",
      "QuadrigaCX",
      "BitSquare",
      "LiveCoin",
      "BTCMarkets",
      "CHBTC",
      "Novaexchange",
      "Coinroom",
      "Poloniex",
      "OKEX",
      "Huobi",
      "BitFlip",
      "CCEX",
      "Cryptopia",
      "Liqui",
      "Lykke",
      "Kraken",
      "BitTrex",
      "Yunbi",
      "Bitso",
      "Tidex",
      "Bleutrade",
      "BTCE",
      "BitZ",
      "TrustDEX",
      "ViaBTC",
      "Binance",
      "Bitfinex",
      "Zaif",
      "BTC38",
      "Cexio",
      "Yobit",
      "BTER",
      "Abucoins",
      "OKCoin",
      "Coinbase",
      "BitGrail",
      "BXinth",
      "TheRockTrading",
      "bitFlyer",
      "HuobiPro",
      "Bithumb",
      "Coincap",
      "Gemini",
      "Jubi",
      "EtherDelta",
      "Korbit",
      "LakeBTC"
    ],
    "Wallets": {
      "desktop": {
        "win": null,
        "linux": null,
        "mac": null
      },
      "mobile": {
        "android": null,
        "ios": null
      },
      "types": []
    }
  },
  "ICO": {
    "Status": "Finished",
    "Description": "<p>Ethereum is a decentralized platform that runs smart contracts: applications that run exactly as programmed without any possibility of downtime, censorship, fraud or third party interference.</p><p>These apps run on a custom built blockchain, a shared and global infrastructure that can move value around and represent the ownership of property. This enables developers to create markets, store registries of debts or promises, move funds in accordance with instructions given long in the past, and many other things that have not been invented yet, all without a middle man or counterparty risk.</p><p><strong>Team</strong>:</p><ul><li><strong><span>Vitalik Buterin</span></strong>: Creato<span>r of Ethereum.</span> (<a href=\"https://twitter.com/vitalikbuterin\" target=\"_blank\">Twitter</a>);</li><li><strong><span>Mihai Alisie</span></strong>: <span>Co-Founder</span><span> of Ethereum. </span>(<a href=\"https://twitter.com/mihaialisie\" target=\"_blank\">Twitter</a>);</li><li><strong><span>Anthony Di Iorio</span></strong>: <span>Co-Founder</span><span> of Ethereum. </span>(<a href=\"https://twitter.com/diiorioanthony\" target=\"_blank\">Twitter</a>)</li></ul><p><span>The Ethereum sale was uncapped and ran for 42 days. The sale price was 2000 ETH for 1 BTC for the first 14 days and then started to increase linearly, finishing at 1337 ETH for 1 BTC. 31,529 BTC were raised which was worth around $18,500,000 at the time of the sale close. However, in order to pay expenses part of the BTC raised had to be sold at around 50% loss.</span></p><p>Ether th</p><p><strong>Interesting files:</strong></p><ul><li><a data-id=\"178224\" href=\"/media/1383733/pdfs-ethereum-roadmap.pdf\" target=\"_blank\" title=\"pdfs-Ethereum-Roadmap.pdf\"><span>Roadmap</span></a></li><li><a data-id=\"178225\" href=\"/media/1383734/pdfs-intendeduseofrevenue.pdf\" target=\"_blank\" title=\"pdfs-IntendedUseOfRevenue.pdf\"><span>Intended Use of Revenue</span></a></li><li><span><a data-id=\"178230\" href=\"/media/1383735/pdfs-termsandconditionsoftheethereumgenesissale.pdf\" target=\"_blank\" title=\"pdfs-TermsAndConditionsOfTheEthereumGenesisSale.pdf\">Terms and Conditions of the Ethereum Genesis Sale</a></span></li></ul><p> </p>",
    "TokenType": "New Blockchain",
    "WebsiteLink": "https://www.ethereum.org/",
    "FundingCap": "Unlimited",
    "FundingTarget": "No Target",
    "Date": 1406070000,
    "EndDate": 1409698800,
    "FundsRaisedList": "31,529 BTC",
    "FundsRaisedUSD": "18500000",
    "StartPrice": "0.0005",
    "StartPriceCurrency": "BTC",
    "Jurisdiction": "Switzerland",
    "BlogLink": "https://blog.ethereum.org/",
    "WhitePaperLink": "https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-White-Paper"
  },
  "ccId": "7605"
}
